{"version":3,"sources":["ng://angular-popper/lib/angular-popper.component.ts","ng://angular-popper/lib/angular-popper.module.ts"],"names":["PopperComponent","el","zone","this","show","closeButton","placement","positionFixed","eventsEnabled","close","EventEmitter","prototype","ngAfterViewInit","create","ngOnChanges","changes","target","firstChange","destroy","ngOnDestroy","onClose","emit","_this","runOutsideAngular","_a","modifiers","popper","Popper","getTargetNode","nativeElement","querySelector","document","Component","args","selector","template","encapsulation","ViewEncapsulation","None","changeDetection","ChangeDetectionStrategy","OnPush","ElementRef","NgZone","Input","Output","NgxPopper","NgModule","imports","CommonModule","declarations","exports"],"mappings":"iaAAA,IAAAA,EAAA,WAoCE,SAAAA,EAAoBC,EAAwBC,GAAxBC,KAAAF,GAAAA,EAAwBE,KAAAD,KAAAA,EAZnCC,KAAAC,MAAO,EACPD,KAAAE,aAAc,EACdF,KAAAG,UAA8B,SAC9BH,KAAAI,eAAgB,EAChBJ,KAAAK,eAAgB,EAIfL,KAAAM,MAAQ,IAAIC,EAAAA,aAqExB,OA/DEV,EAAAW,UAAAC,gBAAA,WACET,KAAKU,UAGPb,EAAAW,UAAAG,YAAA,SAAYC,IAERA,EAAQC,SAAWD,EAAQC,OAAOC,aAClCF,EAAQT,YAAcS,EAAQT,UAAUW,aACxCF,EAAQR,gBAAkBQ,EAAQR,cAAcU,aAChDF,EAAQP,gBAAkBO,EAAQP,cAAcS,eAEhDd,KAAKe,UACLf,KAAKU,WAITb,EAAAW,UAAAQ,YAAA,WACEhB,KAAKe,WAGPlB,EAAAW,UAAAS,QAAA,WACEjB,KAAKC,MAAO,EACZD,KAAKM,MAAMY,QAGbrB,EAAAW,UAAAE,OAAA,WAAA,IAAAS,EAAAnB,KACEA,KAAKD,KAAKqB,kBAAiB,WACnB,IAAAC,EAAAF,EAAEhB,EAAAkB,EAAAlB,UAAWC,EAAAiB,EAAAjB,cAAeC,EAAAgB,EAAAhB,cAAeiB,EAAAD,EAAAC,UAEjDH,EAAKI,OAAS,IAAIC,EAChBL,EAAKM,gBACLN,EAAKrB,GAAG4B,cAAcC,cAAc,mBACpC,CACExB,UAASA,EACTC,cAAaA,EACbC,cAAaA,EACbiB,UAASA,OAMjBzB,EAAAW,UAAAO,QAAA,WAAA,IAAAI,EAAAnB,KACMA,KAAKuB,SACPvB,KAAKD,KAAKqB,kBAAiB,WACzBD,EAAKI,OAAOR,YAGdf,KAAKuB,OAAS,OAIV1B,EAAAW,UAAAiB,cAAR,WACE,OAAIzB,KAAKa,OACoB,iBAAhBb,KAAKa,OACPe,SAASD,cAAc3B,KAAKa,QAE5Bb,KAAKa,OAGPb,KAAKF,GAAG4B,mCAlFpBG,EAAAA,UAASC,KAAA,CAAC,CACTC,SAAU,iBACVC,SAAA,0aAEAC,cAAeC,EAAAA,kBAAkBC,KACjCC,gBAAiBC,EAAAA,wBAAwBC,mgDAbzCC,EAAAA,kBAIAC,EAAAA,wCAYCC,EAAAA,2BACAA,EAAAA,yBACAA,EAAAA,6BACAA,EAAAA,6BACAA,EAAAA,yBACAA,EAAAA,sBACAA,EAAAA,qBAEAC,EAAAA,UAqEH7C,EArGA,GCAA8C,EAAA,WAOA,SAAAA,KAWwB,2BAXvBC,EAAAA,SAAQd,KAAA,CAAC,CACRe,QAAS,CACPC,EAAAA,cAEFC,aAAc,CACZlD,GAEFmD,QAAS,CACPnD,OAGoB8C,EAlBxB","sourcesContent":["import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  AfterViewInit,\n  OnDestroy,\n  OnChanges,\n  ElementRef,\n  SimpleChanges,\n  ViewEncapsulation,\n  ChangeDetectionStrategy,\n  NgZone\n} from '@angular/core';\nimport Popper from 'popper.js';\n\n@Component({\n  selector: 'angular-popper',\n  templateUrl: './angular-popper.component.html',\n  styleUrls: ['./angular-popper.css'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class PopperComponent implements AfterViewInit, OnChanges, OnDestroy {\n  @Input() show = true;\n  @Input() closeButton = false;\n  @Input() placement: Popper.Placement = 'bottom';\n  @Input() positionFixed = false;\n  @Input() eventsEnabled = true;\n  @Input() modifiers: Popper.Modifiers;\n  @Input() target: string | Element;\n\n  @Output() close = new EventEmitter<void>();\n\n  private popper: Popper;\n\n  constructor(private el: ElementRef, private zone: NgZone) {}\n\n  ngAfterViewInit() {\n    this.create();\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (\n      changes.target && !changes.target.firstChange ||\n      changes.placement && !changes.placement.firstChange ||\n      changes.positionFixed && !changes.positionFixed.firstChange ||\n      changes.eventsEnabled && !changes.eventsEnabled.firstChange\n    ) {\n      this.destroy();\n      this.create();\n    }\n  }\n\n  ngOnDestroy() {\n    this.destroy();\n  }\n\n  onClose() {\n    this.show = false;\n    this.close.emit();\n  }\n\n  create() {\n    this.zone.runOutsideAngular(() => {\n      const { placement, positionFixed, eventsEnabled, modifiers } = this;\n\n      this.popper = new Popper(\n        this.getTargetNode(),\n        this.el.nativeElement.querySelector('.angular-popper'),\n        {\n          placement,\n          positionFixed,\n          eventsEnabled,\n          modifiers\n        }\n      );\n    });\n  }\n\n  destroy() {\n    if (this.popper) {\n      this.zone.runOutsideAngular(() => {\n        this.popper.destroy();\n      });\n\n      this.popper = null;\n    }\n  }\n\n  private getTargetNode(): Element {\n    if (this.target) {\n      if (typeof this.target === 'string') {\n        return document.querySelector(this.target);\n      } else {\n        return this.target;\n      }\n    } else {\n      return this.el.nativeElement;\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { PopperComponent } from './angular-popper.component';\n\nexport * from './angular-popper.component';\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [\n    PopperComponent\n  ],\n  exports: [\n    PopperComponent\n  ]\n})\nexport class NgxPopper {}\n"]}